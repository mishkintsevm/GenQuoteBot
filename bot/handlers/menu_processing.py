from aiogram.types import InputMediaPhoto, InlineKeyboardMarkup, FSInputFile

from data.get_quotes_api import get_topics, get_authors
from keyboards.inline import get_main_menu_kb, get_topic_kb, get_author_kb
from utils.paginator import Paginator


async def get_menu_content(
    level: int,
    menu_name: str,
    page: int | None = None,
    topic: str | None = None,
    author_name: str | None = None,
) -> tuple[InputMediaPhoto, InlineKeyboardMarkup]:
    if level == 0:
        return await main_menu()

    if level == 1 and menu_name == "topics":
        return await topic_list(page or 1)

    if level == 1 and menu_name == "authors":
        return await author_list(page or 1)

    return await main_menu()


async def main_menu() -> tuple[InputMediaPhoto, InlineKeyboardMarkup]:
    """
    –ë–∞–Ω–Ω–µ—Ä + –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    media = InputMediaPhoto(
        media=FSInputFile("assets/images/start-banner.png"),
        caption=(
            "üìö <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
            "‚ú® –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å <b>—Å–ª—É—á–∞–π–Ω—É—é —Ü–∏—Ç–∞—Ç—É</b>, "
            "–∞ —Ç–∞–∫–∂–µ –≤—ã–±—Ä–∞—Ç—å —Ü–∏—Ç–∞—Ç—ã –ø–æ <i>—Ç–µ–º–∞—Ç–∏–∫–µ</i> –∏–ª–∏ <i>–∞–≤—Ç–æ—Ä—É</i>.\n\n"
            "üëá –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
        ),
        parse_mode="HTML"
    )
    return media, get_main_menu_kb()


async def topic_list(page: int = 1) -> tuple[InputMediaPhoto, InlineKeyboardMarkup]:
    all_topics = await get_topics()
    total = len(all_topics)

    paginator = Paginator(
        total_items=total,
        page=page,
        items_per_page=10,
        level=1,
        menu_name="topics",
    )

    slice_ = all_topics[(page - 1) * paginator.per_page : page * paginator.per_page]

    media = InputMediaPhoto(
        media=FSInputFile("assets/images/start-banner.png"),
        caption=(
            "üìö <b>–ñ–∞–Ω—Ä—ã —Ü–∏—Ç–∞—Ç</b>\n\n"
            "üîç –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–∞ –∫–∞–∫—É—é —Ç–µ–º—É —Ü–∏—Ç–∞—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å\n\n"
            "üëá –°–ø–∏—Å–æ–∫ –∂–∞–Ω—Ä–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –≤–Ω–∏–∑—É."
        ),
        parse_mode="HTML"
    )
    return media, get_topic_kb(
        topics=slice_,
        total_pages=paginator.total_pages,
        level=1,
        page=page
    )


async def author_list(page: int = 1) -> tuple[InputMediaPhoto, InlineKeyboardMarkup]:
    authors, total_pages = await get_authors(page)

    media = InputMediaPhoto(
        media=FSInputFile("assets/images/start-banner.png"),
        caption=(
            "üë§ <b>–ê–≤—Ç–æ—Ä—ã —Ü–∏—Ç–∞—Ç</b>\n\n"
            "üîç –ù–∏–∂–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –∞–≤—Ç–æ—Ä—ã, —Ü–∏—Ç–∞—Ç—ã –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å."
        ),
        parse_mode="HTML"
    )
    return media, get_author_kb(
        authors=authors,
        total_pages=total_pages,
        level=1,
        page=page
    )
